specVersion: 0.0.4
features:
  - nonFatalErrors
  - ipfsOnEthereumContracts
schema:
  file: ./schema.graphql
dataSources:
  # This approach uses a particular event emitted once very early to trigger the initial erc20 token list.
  - kind: ethereum
    name: TokenRegistry
    network: {{ network }}
    source:
      address: "{{ TokenRegistry.address }}"
      abi: TokenRegistry
      startBlock: {{ TokenRegistry.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Token
      abis:
        - name: TokenRegistry
          file: ./abis/TokenRegistry.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        # Use the Initialized event of DUSD token
        - event: Initialized(uint8 version)
          topic0: "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
          handler: initTokenList
      file: ./src/mappings/registry.ts
templates:
  # These data sources templates exist to support the different types that a specific erc20 token could be.
  - name: StandardToken
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/token.ts
      entities:
        - TransferEvent
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - name: BurnableToken
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: Burnable
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/token.ts
      entities:
        - BurnEvent
      abis:
        - name: Burnable
          file: ./abis/Burnable.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Burn(indexed address,uint256)
          handler: handleBurn
  - name: MintableToken
    kind: ethereum/contract
    network: {{ network }}
    source:
      abi: Mintable
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/token.ts
      entities:
        - MintEvent
      abis:
        - name: Mintable
          file: ./abis/Mintable.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Mint(indexed address,uint256)
          handler: handleMint
